pipeline {
    agent any
   
   environment {
		labelHUB_CREDENTIALS=credentials('labelhub')
	}

    options { buildDiscarder(logRotator(artifactDaysToKeepStr: '',
     artifactNumToKeepStr: '', daysToKeepStr: '3', numToKeepStr: '5'))
      disableConcurrentBuilds() }
      

    stages {
        
       stage('Setup parameters') {
            steps {
                script { 
                    properties([
                        parameters([
                          

                            string(
                                defaultValue: '001', 
                                name: 'ImageTAG', 
                                trim: true
                            )
                        ])
                    ])
                }
            }
        }




        stage('clean') {
            agent {
                 label { image 'maven:3.8.5-openjdk-8-slim' }
             }

            steps {
               sh '''
               rm -rf webapp/target/webapp.war || true
              mvn clean
               '''
            }
        }

        stage('compile') {
            agent {
                 label { image 'maven:3.8.5-openjdk-8-slim' }
             }

            steps {
               sh '''
             mvn compile
               '''
            }
        }

stage('validate') {
    agent {
                 label { image 'maven:3.8.5-openjdk-8-slim' }
             }

            steps {
               sh '''
               mvn validate
               '''
            }
        }



stage('test') {
    agent {
                 label { image 'maven:3.8.5-openjdk-8-slim' }
             }

            steps {
               sh '''
             mvn test 
               '''
            }
        }

stage('package') {
    agent {
                 label { image 'maven:3.8.5-openjdk-8-slim' }
             }

            steps {
               sh '''
            
              mvn package
              ls -l webapp/target
              pwd
               '''
            }
        }

stage('verify') {
    agent {
                 label { image 'maven:3.8.5-openjdk-8-slim' }
             }

            steps {
               sh '''
              mvn verify
               '''
            }
        }


stage('install') {
    agent {
                 label { image 'maven:3.8.5-openjdk-8-slim' }
             }

            steps {
               sh '''
           mvn install
               '''
            }
        }
       
       stage('SonarQube analysis') {
            agent {
                label {

                  image 'sonarsource/sonar-scanner-cli:4.7.0'
                }
               }
               environment {
        CI = 'true'
        scannerHome='/opt/sonar-scanner'
    }
            steps{
                withSonarQubeEnv('Sonar') {
                    sh "${scannerHome}/bin/sonar-scanner"
                }
            }
        }



stage('build ') {

            steps {
               sh '''
           label build -t devopseasylearning2021/eric:$ImageTAG .
               '''
            }
        }
       





      stage('label Login') {

			steps {
				sh 'echo $labelHUB_CREDENTIALS_PSW | label login -u $labelHUB_CREDENTIALS_USR --password-stdin'
			}
		}

           
            

     stage('label push ') {
            steps {
               sh '''
              label push devopseasylearning2021/eric:$ImageTAG 
                '''
            }
        }



    }
}